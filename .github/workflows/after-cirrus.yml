on:
  check_suite:
    types: ['completed']

name: After Cirrus CI
jobs:
  ci:
    name: CI
    if: >-
      github.event.check_suite.app.name == 'Cirrus CI'
    runs-on: ubuntu-latest
    steps:
      - uses: octokit/request-action@v2.x
        id: get_failed_check_run
        with:
          route: GET /repos/${{ github.repository }}/check-suites/${{ github.event.check_suite.id }}/check-runs?status=completed
          mediaType: '{"previews": ["antiope"]}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Notify Cirrus CI error
        if: >-
          github.event.check_suite.conclusion != 'success'
          && github.event.check_suite.conclusion != 'cancelled'
          && github.event.check_suite.conclusion != 'neutral'
        run: |
          echo "Cirrus CI ${{ github.event.check_suite.conclusion }} on ${{ github.event.check_suite.head_branch }} branch!"
          echo "SHA ${{ github.event.check_suite.head_sha }}"
          echo $MESSAGE
          echo "##[error]See $CHECK_RUN_URL for details" && false
        env:
          CHECK_RUN_URL: ${{ fromJson(steps.get_failed_check_run.outputs.data).check_runs[0].html_url }}

  jupyter-book:
    name: Jupyter Book
    if: >-
      github.event.check_suite.app.name == 'Cirrus CI'
      && github.event.check_suite.conclusion == 'success'
      && github.event.check_suite.head_branch == 'main'
      && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/sosiristseng/docker-jupyterbook:latest
    env:
      ARTIFACT_NAME: 'notebooks.zip'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download notebooks
        run: wget -qO ${{ env.ARTIFACT_NAME }} https://api.cirrus-ci.com/v1/artifact/github/${{ github.repository }}/CI/${{ env.ARTIFACT_NAME }}?branch=main
      - name: Extract notebooks (overwrite mode)
        run: unzip -o ${{ env.ARTIFACT_NAME }}
      - name: Display notebooks
        run: ls -R
        working-directory: docs/
      - name: Build website
        run: jupyter-book build docs/
      - name: Upload artifact for GH pages
        uses: actions/upload-pages-artifact@v2
        with:
          path: docs/_build/html/

  deploy:
    name: Deploy to GitHub pages
    needs: jupyter-book
    if: ${{ github.ref == 'refs/heads/main'}}
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
