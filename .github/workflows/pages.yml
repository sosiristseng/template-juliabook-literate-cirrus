name: GitHub pages

on:
  check_suite:
    types: ['completed']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  jupyter-book:
    name: Jupyter Book
    if: >-
      github.event.check_suite.app.name == 'Cirrus CI'
      && github.event.check_suite.conclusion == 'success'
      && github.event.check_suite.head_branch == 'main'
      && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      ARTIFACT_NAME: 'notebooks.zip'
      PYTHON_VER: '3.11'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download notebooks
        run: wget -qO ${{ env.ARTIFACT_NAME }} https://api.cirrus-ci.com/v1/artifact/github/${{ github.repository }}/jupyter_book/${{ env.ARTIFACT_NAME }}?branch=main
      - name: Extract notebooks (overwrite mode)
        run: unzip -o ${{ env.ARTIFACT_NAME }}
      - name: Display notebooks
        run: ls -R
        working-directory: docs/
      - name: Setup Python ${{ env.PYTHON_VER }}
        uses: actions/setup-python@v4
        id: python
        with:
          python-version: ${{ env.PYTHON_VER }}
      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv
        with:
          requirement_files: .github/requirements.txt  # this is optional
      - uses: syphar/restore-pip-download-cache@v1
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'
        # the package installation will only be executed when the
        # requirements-files have changed.
      - name: Install Python dependencies
        run: pip install -r .github/requirements.txt
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'
      - name: Build website
        run: jupyter-book build docs/
      - name: Upload artifact for GH pages
        uses: actions/upload-pages-artifact@v1
        with:
          path: docs/_build/html/

  deploy:
    name: Deploy to GitHub pages
    needs: jupyter-book
    if: ${{ github.ref == 'refs/heads/main'}}
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
